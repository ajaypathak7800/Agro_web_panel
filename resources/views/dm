<?php

namespace App\Exports;

use Illuminate\Support\Facades\DB;
use Maatwebsite\Excel\Concerns\FromCollection;
use Maatwebsite\Excel\Concerns\WithHeadings;
use Illuminate\Support\Collection;
use App\Models\details;
use App\Models\ExpertForm;

class Expert implements FromCollection, WithHeadings
{
    public function collection()
    {
        // Fetching data from Details table where expert_id exists and hasConnectivity is true
        $details = DB::table('fpo_details')
            ->where('data', 'LIKE', '%"expert_id"%')
            ->where('data', 'LIKE', '%"hasConnectivity"%')
            ->distinct()
            ->get();

        // Mapping each detail to include related ExpertForm data
        $detailsWithForms = $details->map(function ($detail) {
            $data = json_decode($detail->data, true); // Decode JSON data as an associative array
            $expertId = $data['expert_id'] ?? null;

            // Create an array with only the expert_id
            $detailData = ['expert_id' => $expertId];

            // Finding ExpertForm data based on expert_id
            $expertForm = expertform::where('id', $expertId)->first();

            $dataArray = []; // Initialize an empty array

            if ($expertForm) {
                // Check if the necessary keys exist in the JSON data
                
                if (
                    isset($detailsWithForms['selectedExpert'])

                ) {
                    $dataArray[] = [
                        'selectedExpert' => $data['selectedExpert'],
                        'selectedIA' => $data['selectedIA'],
                        'selectedCbbo' => $data['selectedCbbo'],
                        'selectedState' => $data['selectedState'],
                        'selectedDistrict' => $data['selectedDistrict'],
                        'selectedBlock' => $data['selectedBlock'],
                        'selectedFPO' => $data['selectedFPO'],
                        'selectedFpoAddress' => $data['selectedFpoAddress'],
                        'addressInMis' => $data['addressInMis'],
                        'correctAddress' => $data['correctAddress'],
                        'numberShareholders' => $data['numberShareholders'],
                        'shareholderCorrectInMis' => $data['shareholderCorrectInMis'],
                        'correctShareholders' => $data['correctShareholders'],
                        'ceoName' => $data['ceoName'],
                        'isCeoCorrect' => $data['isCeoCorrect'],
                    ];
                }
            }

            return collect($detailData + $dataArray); // Merge detailData with dataArray
        });

        return $detailsWithForms;
    }

    public function headings(): array
    {
        return [
            'Selected Expert',
            'Inspection Date',
            'Selected IA',
            'Selected CBBO',
            'Selected State',
            'Selected District',
            'Selected Block',
            'Selected FPO',
            'Selected FPO Address',
            'Address in MIS',
            'Correct Address',
            'Number of Shareholders',
            'Shareholders Correct in MIS',
            'Correct Shareholders',
            'CEO Name',
            'Is CEO Correct',
            'CEO Appointed',
            'Correct CEO',
            'Offer Letter CEO',
            'Accountant Name',
            'Is Correct Accountant',
            'Accountant Appointed',
            'Correct Accountant',
            'Offer Letter Account',
        ];
    }
}
